version: "3.8"
services:
  django:
    build:
      context: ./
    container_name: django
    command: >
      sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - mysqldb
    env_file:
      - .env
    volumes:
      - "./:/backend" # 수정: 로컬 프로젝트 루트 디렉토리를 컨테이너의 /backend와 연결
      - "./media/fonts:/app/media/fonts" # 폰트 디렉토리 컨테이너 연결
    networks:
      - app-tier

  mysqldb:
    image: mysql:latest
    env_file:
      - .env
    ports:
      - "3305:3306"
    volumes:
      - "mysqldata:/var/lib/mysql" # 수정: mysqldata를 로컬 디렉토리 './data/mysql'에 매핑
    restart: always
    networks:
      - app-tier

  phpmyadmin:
    image: phpmyadmin
    restart: always
    links:
      - mysqldb
    ports:
      - 80:80
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysqldb
      PMA_PORT: 3306
    networks:
      - app-tier

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-tier

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090" # Prometheus 웹 인터페이스 포트
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml # Prometheus 설정 파일 연결
    networks:
      - app-tier # Django와 같은 네트워크에서 메트릭 수집 가능

  grafana:
    image: grafana/grafana:9.5.20
    container_name: grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning # 그라파나 설정(config) 볼륨
      - ./grafana/data:/var/lib/grafana # 그라파나 대시보드 데이터
    ports:
      - "4000:3000" # 4000번 포트
    networks:
      - app-tier

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro #읽기 전용 데이터 - 루트 파일 시스템
      - /var/run:/var/run:rw #읽기 & 쓰기 - 런타임 데이터
      - /sys:/sys:ro  #읽기 전용 데이터 - 커널, 하드웨어, 드라이버 정보 등등
      - /var/lib/docker/:/var/lib/docker:ro #읽기 전용 데이터 - 도커 정보 데이터
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/machine-id:/etc/machine-id:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    privileged: true # 컨테이너에 높은 권한 부여 (보안 고려 필요)
    networks:
      - app-tier

  alertmanager:
    image: prom/alertmanager:main
    container_name: alertmanager
    ports:
      - "9093:9093" # 포트 9093 매핑
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager.yml #설정파일 볼륨 추가
      - ./alertmanager/tmp:/data/ #데이터 담기 전용
    networks:
      - app-tier
    command: --config.file=/etc/alertmanager.yml --log.level=debug #설정파일 설정


volumes:
  mysqldata: # 로컬 디렉토리를 지정했으므로, 익명 볼륨 제거 가능

networks:
  app-tier:
    driver: bridge
